<?xml version="1.0" encoding="UTF-8"?>
<fresh:FreshBaseContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:fresh="clr-namespace:FreshMvvm;assembly=FreshMvvm"
             xmlns:vm="clr-namespace:CrossCam.ViewModel;assembly=CrossCam"
             xmlns:ce="clr-namespace:CrossCam.CustomElement;assembly=CrossCam"
             xmlns:vc="clr-namespace:CrossCam.ValueConverter;assembly=CrossCam"
             mc:Ignorable="d"
             
             d:DataContext="{d:DesignInstance Type=vm:CameraViewModel, IsDesignTimeCreatable=False}"
			 x:Class="CrossCam.Page.CameraPage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Thickness x:Key="_capturePadding">20,20,20,10</Thickness>
            <Rectangle x:Key="_captureRectangle">0.5,1,0.25,0.33</Rectangle>
            <Thickness x:Key="_cancelPadding">10,10,10,10</Thickness>
            <Thickness x:Key="_reticlePadding">10</Thickness>
            <Thickness x:Key="_linePadding">0,10,0,10</Thickness>
        </ResourceDictionary>
    </ContentPage.Resources>
    <AbsoluteLayout>
        <Grid AbsoluteLayout.LayoutFlags="All"
              AbsoluteLayout.LayoutBounds="0,0,1,1"
              ColumnSpacing="0"
              RowSpacing="0"
              BackgroundColor="Black">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Image Grid.Column="0"
                   Grid.Row="0"
                   HorizontalOptions="EndAndExpand"
                   Aspect="{Binding PreviewAspect}"
                   Source="{Binding LeftImageSource}"/>
            <ce:CameraModule Grid.Column="0"
                             Grid.Row="0"
                             IsPortrait="{Binding IsViewPortrait}"
                             CaptureTrigger="{Binding CapturePictureTrigger}"
                             IsVisible="{Binding IsLeftCameraVisible}"
                             CapturedImage="{Binding LeftByteArray}"
                             CaptureSuccess="{Binding LeftCaptureSuccess}"
                             IsFullScreenPreview="{Binding Settings.FillScreenPreview}"/>
            <ce:CameraCaptureOutline Grid.Column="0"
                                     Grid.Row="0">
                <ce:CameraCaptureOutline.Behaviors>
                    <ce:FadeInAndOutBehavior Trigger="{Binding LeftCaptureSuccess}"
                                             InTimeMs="125"
                                             OutTimeMs="125"
                                             VisibleTimeMs="0"/>
                </ce:CameraCaptureOutline.Behaviors>
            </ce:CameraCaptureOutline>
            <ScrollView Grid.Column="1"
                        Grid.Row="0"
                        IsVisible="{Binding IsSaving, Converter={vc:BooleanInvertConverter}}">
                <StackLayout Padding="10"
                             Spacing="0">
                    <Label Text="~Are you sure you don't want landscape mode?~"
                           IsVisible="{Binding ShouldPortraitWarningBeVisible}"/>
                    <Label Text="{Binding HelpText}"
                           IsVisible="{Binding ShouldHelpTextBeVisible}"/>
                </StackLayout>
            </ScrollView>
            <Image Grid.Column="1"
                   Grid.Row="0"
                   HorizontalOptions="StartAndExpand"
                   Aspect="{Binding PreviewAspect}"
                   Source="{Binding RightImageSource}"/>
            <ce:CameraModule Grid.Column="1"
                             Grid.Row="0"
                             CaptureTrigger="{Binding CapturePictureTrigger}"
                             IsVisible="{Binding IsRightCameraVisible}"
                             CapturedImage="{Binding RightByteArray}"
                             CaptureSuccess="{Binding RightCaptureSuccess}"
                             IsFullScreenPreview="{Binding Settings.FillScreenPreview}"/>
            <ce:CameraCaptureOutline Grid.Column="1"
                                     Grid.Row="0">
                <ce:CameraCaptureOutline.Behaviors>
                    <ce:FadeInAndOutBehavior Trigger="{Binding RightCaptureSuccess}"
                                             InTimeMs="125"
                                             OutTimeMs="125"
                                             VisibleTimeMs="0"/>
                </ce:CameraCaptureOutline.Behaviors>
            </ce:CameraCaptureOutline>
        </Grid>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="1,1,0.15,0.20"
                     Padding="10"
                     IsVisible="{Binding ShouldSettingsBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding NavigateToSettingsCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="gear"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.15, 1, 0.125, 0.125"
                     Padding="{DynamicResource _cancelPadding}"
                     IsVisible="{Binding ShouldLeftRetakeBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding RetakeLeftCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="cancel"
                   Opacity="0.75"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.85, 1, 0.125, 0.125"
                     Padding="{DynamicResource _cancelPadding}"
                     IsVisible="{Binding ShouldRightRetakeBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding RetakeRightCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="cancel"
                   Opacity="0.5"/>
        </ContentView>
        <BoxView x:Name="_upperLine" 
                 AbsoluteLayout.LayoutFlags="All"
                 AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                 Margin="{DynamicResource _linePadding}"
                 InputTransparent="True"
                 BackgroundColor="White"
                 IsVisible="{Binding ShouldLineGuidesBeVisible}"/>
        <ContentView x:Name="_upperLinePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                     Padding="{DynamicResource _linePadding}"
                     IsVisible="{Binding ShouldLineGuidesBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="UpperLinePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <BoxView x:Name="_lowerLine"
                 AbsoluteLayout.LayoutFlags="All"
                 AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                 InputTransparent="True"
                 BackgroundColor="White"
                 Margin="{DynamicResource _linePadding}"
                 IsVisible="{Binding ShouldLineGuidesBeVisible}"/>
        <ContentView x:Name="_lowerLinePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                     Padding="{DynamicResource _linePadding}"
                     IsVisible="{Binding ShouldLineGuidesBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="LowerLinePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <Image x:Name="_leftReticle"
               AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0.2297, 0.5, 0.075, 0.075"
               Margin="{DynamicResource _reticlePadding}"
               InputTransparent="True" 
               Source="squareOuter"
               IsVisible="{Binding ShouldDonutGuideBeVisible}"/>
        <ContentView x:Name="_leftReticlePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.2297, 0.5, 0.075, 0.075"
                     Padding="{DynamicResource _reticlePadding}"
                     IsVisible="{Binding ShouldDonutGuideBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="ReticlePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <Image x:Name="_rightReticle"
               AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0.7703, 0.5, 0.075, 0.075"
               Margin="{DynamicResource _reticlePadding}"
               InputTransparent="True" 
               Source="squareInner"
               IsVisible="{Binding ShouldDonutGuideBeVisible}"/>
        <ContentView x:Name="_rightReticlePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.7703, 0.5, 0.075, 0.075"
                     Padding="{DynamicResource _reticlePadding}"
                     IsVisible="{Binding ShouldDonutGuideBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="ReticlePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="{DynamicResource _captureRectangle}"
                     Padding="{DynamicResource _capturePadding}"
                     IsVisible="{Binding ShouldEndButtonsBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding SaveCapturesCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="checkmark"
                   Opacity="0.75"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="{DynamicResource _captureRectangle}"
                     Padding="{DynamicResource _capturePadding}"
                     IsVisible="{Binding ShouldCaptureButtonBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding CapturePictureCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="aperture"
                   Opacity="0.5"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.5,0.5,0.15,0.2"
                     Padding="10"
                     IsVisible="{Binding ShouldEndButtonsBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ToggleViewModeCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="eye"
                   Opacity="0.75"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.5,0,0.15,0.2"
                     Padding="10"
                     IsVisible="{Binding ShouldEndButtonsBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ClearCapturesCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="clear"
                   Opacity="0.75"/>
        </ContentView>
        <Label AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0.5,0.85,1,0.5"
               HorizontalOptions="CenterAndExpand"
               VerticalOptions="CenterAndExpand"
               FontSize="24"
               Text="Saved to Photos!">
            <Label.Behaviors>
                <ce:FadeInAndOutBehavior Trigger="{Binding SuccessFadeTrigger}"
                                         InTimeMs="250"
                                         OutTimeMs="250"
                                         VisibleTimeMs="2000"/>
            </Label.Behaviors>
        </Label>
        <Label AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0.5,0.85,1,0.5"
               HorizontalOptions="CenterAndExpand"
               VerticalOptions="CenterAndExpand"
               FontSize="24"
               Text="Save failed. :(">
            <Label.Behaviors>
                <ce:FadeInAndOutBehavior Trigger="{Binding FailFadeTrigger}"
                                         InTimeMs="250"
                                         OutTimeMs="250"
                                         VisibleTimeMs="2000"/>
            </Label.Behaviors>
        </Label>
        <Label AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0.5,0.85,1,0.5"
               HorizontalOptions="CenterAndExpand"
               VerticalOptions="CenterAndExpand"
               FontSize="24"
               Text="Saving..."
               IsVisible="{Binding IsSaving}"/>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0,0,1,1"
                     IsVisible="{Binding IsViewMode}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ToggleViewModeCommand}"/>
            </ContentView.GestureRecognizers>
        </ContentView>
    </AbsoluteLayout>
</fresh:FreshBaseContentPage>