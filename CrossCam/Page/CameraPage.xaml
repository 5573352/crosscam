<?xml version="1.0" encoding="UTF-8"?>
<fresh:FreshBaseContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:fresh="clr-namespace:FreshMvvm;assembly=FreshMvvm"
             xmlns:vm="clr-namespace:CrossCam.ViewModel;assembly=CrossCam"
             xmlns:ce="clr-namespace:CrossCam.CustomElement;assembly=CrossCam"
             xmlns:vc="clr-namespace:CrossCam.ValueConverter;assembly=CrossCam"
             xmlns:forms="clr-namespace:SkiaSharp.Views.Forms;assembly=SkiaSharp.Views.Forms"
             mc:Ignorable="d"
             
             d:DataContext="{d:DesignInstance Type=vm:CameraViewModel, IsDesignTimeCreatable=False}"
			 x:Class="CrossCam.Page.CameraPage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <x:Double x:Key="_topBarHeight">20</x:Double>
            <Thickness x:Key="_topBarSmallButtonPadding" Left="10" Top="{StaticResource _topBarHeight}" Right="10" Bottom="10"/>
            <Thickness x:Key="_topBarButtonPadding" Left="0" Top="{StaticResource _topBarHeight}" Right="0" Bottom="0"/>

            <x:Double x:Key="_bottomPaddingHeight">10</x:Double>
            <Thickness x:Key="_bottomPadding" Left="10" Top="10" Right="10" Bottom="{StaticResource _bottomPaddingHeight}"/>

            <x:Double x:Key="_topMiddleButtonY">0.025</x:Double>
            <x:Double x:Key="_secondMiddleButtonY">0.355</x:Double>

            <x:Double x:Key="_cropLineThickness">3</x:Double>
            <GridLength x:Key="_cropLineGridLength">3</GridLength>
            <x:Double x:Key="_axisGuidesWidth">20</x:Double>
            <x:Double x:Key="_biggerAxisGuidesWidth">30</x:Double>
            <x:Double x:Key="_mediumIconWidth">40</x:Double>
            <x:Double x:Key="_smallerButtonWidth">50</x:Double>
            <x:Double x:Key="_mediumIconWidthPlusCropLineThickness">43</x:Double>
            <x:Double x:Key="_doubleMediumIconWidth">80</x:Double>
            <x:Double x:Key="_mediumIconWidthPlusTopPadding">60</x:Double>
            <x:Double x:Key="_smallerButtonWidthPlusTopPadding">60</x:Double>
            <x:Double x:Key="_largeIconWidth">80</x:Double>
            <x:Double x:Key="_giantIconWidth">100</x:Double>
            <x:Double x:Key="_3dLeftLeft">0.1</x:Double>
            <x:Double x:Key="_3dLeftMiddle">0.15</x:Double>
            <x:Double x:Key="_3dLeftRight">0.3</x:Double>
            <x:Double x:Key="_3dRightLeft">0.7</x:Double>
            <x:Double x:Key="_3dRightMiddle">0.85</x:Double>
            <x:Double x:Key="_3dRightRight">0.9</x:Double>
            <x:Double x:Key="_3dUpper">0.2</x:Double>
            <x:Double x:Key="_3dLower">0.8</x:Double>
            <Rectangle x:Key="_captureBounds" X="0.5" Y="1" Width="{StaticResource _giantIconWidth}" Height="{StaticResource _giantIconWidth}"/>
            <Rectangle x:Key="_clearBounds" X="0.5" Y="{StaticResource _topMiddleButtonY}" Width="{StaticResource _largeIconWidth}" Height="{StaticResource _largeIconWidth}"/>
            <Rectangle x:Key="_cropBounds" X="0.5" Y="0.6" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>
            <Rectangle x:Key="_viewBounds" X="0.5" Y="{StaticResource _secondMiddleButtonY}" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>
            <Rectangle x:Key="_alignBounds" X="0" Y="{StaticResource _topMiddleButtonY}" Width="1" Height="{StaticResource _mediumIconWidthPlusTopPadding}"/>
            <Rectangle x:Key="_keystoneBounds" X="0" Y="{StaticResource _secondMiddleButtonY}" Width="1" Height="{StaticResource _mediumIconWidth}"/>
            <Rectangle x:Key="_editBounds" X="0.5" Y="0.6" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>
            <Rectangle x:Key="_retakeLeftBounds" X="{StaticResource _3dLeftMiddle}" Y="1" Width="{StaticResource _smallerButtonWidth}" Height="{StaticResource _smallerButtonWidth}"/>
            <Rectangle x:Key="_retakeRightBounds" X="{StaticResource _3dRightMiddle}" Y="1" Width="{StaticResource _smallerButtonWidth}" Height="{StaticResource _smallerButtonWidth}"/>
            <Rectangle x:Key="_undoBounds" X="0.5" Y="{StaticResource _topMiddleButtonY}" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidthPlusTopPadding}"/>
            <Rectangle x:Key="_checkBounds" X="0.5" Y="1" Width="{StaticResource _largeIconWidth}" Height="{StaticResource _largeIconWidth}"/>
            <Rectangle x:Key="_helpBounds" X="{StaticResource _3dLeftMiddle}" Y="0" Width="{StaticResource _smallerButtonWidth}" Height="{StaticResource _smallerButtonWidthPlusTopPadding}"/>
            <Rectangle x:Key="_gearBounds" X="{StaticResource _3dRightMiddle}" Y="0" Width="{StaticResource _smallerButtonWidth}" Height="{StaticResource _smallerButtonWidthPlusTopPadding}"/>

            <Rectangle x:Key="_leftKeystoneLeft" X="{StaticResource _3dLeftLeft}" Y="0.5" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>
            <Rectangle x:Key="_leftKeystoneRight" X="{StaticResource _3dLeftRight}" Y="0.5" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>
            <Rectangle x:Key="_rightKeystoneLeft" X="{StaticResource _3dRightLeft}" Y="0.5" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>
            <Rectangle x:Key="_rightKeystoneRight" X="{StaticResource _3dRightRight}" Y="0.5" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>

            <Rectangle x:Key="_leftRotateLeft" X="{StaticResource _3dLeftLeft}" Y="{StaticResource _3dUpper}" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>
            <Rectangle x:Key="_leftRotateRight" X="{StaticResource _3dLeftLeft}" Y="{StaticResource _3dLower}" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>
            <Rectangle x:Key="_rightRotateLeft" X="{StaticResource _3dRightLeft}" Y="{StaticResource _3dUpper}" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>
            <Rectangle x:Key="_rightRotateRight" X="{StaticResource _3dRightLeft}" Y="{StaticResource _3dLower}" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>

            <Rectangle x:Key="_leftAlignUp" X="{StaticResource _3dLeftRight}" Y="{StaticResource _3dUpper}" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>
            <Rectangle x:Key="_rightAlignUp" X="{StaticResource _3dRightRight}" Y="{StaticResource _3dUpper}" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _mediumIconWidth}"/>

            <Rectangle x:Key="_leftZoom" X="{StaticResource _3dLeftRight}" Y="{StaticResource _3dLower}" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _doubleMediumIconWidth}"/>
            <Rectangle x:Key="_rightZoom" X="{StaticResource _3dRightRight}" Y="{StaticResource _3dLower}" Width="{StaticResource _mediumIconWidth}" Height="{StaticResource _doubleMediumIconWidth}"/>

            <Thickness x:Key="_reticlePadding">10</Thickness>
            <Thickness x:Key="_linePadding">0,10,0,10</Thickness>

            <Style TargetType="Label"
                   x:Key="_savingFeedback">
                <Setter Property="FontAttributes"
                        Value="Bold"/>
                <Setter Property="FontSize"
                        Value="24"/>
                <Setter Property="HorizontalOptions"
                        Value="CenterAndExpand"/>
                <Setter Property="VerticalOptions"
                        Value="CenterAndExpand"/>
                <Setter Property="AbsoluteLayout.LayoutFlags"
                        Value="All"/>
                <Setter Property="AbsoluteLayout.LayoutBounds"
                        Value="1,1,1,0.5"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <AbsoluteLayout>
        <Grid AbsoluteLayout.LayoutFlags="All"
              AbsoluteLayout.LayoutBounds="0,0,1,1"
              ColumnSpacing="0"
              RowSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <forms:SKCanvasView x:Name="_canvasView"
                           Grid.Column="0"
                           Grid.Row="0"
                           Grid.ColumnSpan="2"
                           PaintSurface="OnPaintSurface"/>
            <StackLayout Grid.Column="{Binding HelpTextColumn}"
                         Grid.Row="0"
                         IsVisible="{Binding ShouldHelpTextBeVisible}"
                         Padding="10"
                         Spacing="0"
                         VerticalOptions="CenterAndExpand">
                <Label Text="{Binding HelpText}"
                       IsVisible="{Binding ShouldHelpTextBeVisible}"/>
            </StackLayout>
            <ce:CameraModule Grid.Column="{Binding CameraColumn}"
                             Grid.Row="0"
                             SwitchToContinuousFocusTrigger="{Binding SwitchToContinuousFocusTrigger}"
                             IsTapToFocusEnabled="{Binding Settings.IsTapToFocusEnabled}"
                             IsPortrait="{Binding IsViewPortrait}"
                             CaptureTrigger="{Binding CapturePictureTrigger}"
                             IsVisible="{Binding IsCameraVisible}"
                             IsViewInvertedLandscape="{Binding IsViewInvertedLandscape}"
                             CapturedImage="{Binding CapturedImageBytes}"
                             CaptureSuccess="{Binding CaptureSuccess}"
                             ErrorMessage="{Binding ErrorMessage}"/>
            <ce:CameraSuccessOutline Grid.Column="0"
                                     Grid.Row="0">
                <ce:CameraSuccessOutline.Behaviors>
                    <ce:FadeInAndOutBehavior Trigger="{Binding LeftCaptureSuccess}"
                                             InTimeMs="0"
                                             OutTimeMs="250"
                                             VisibleTimeMs="0"/>
                </ce:CameraSuccessOutline.Behaviors>
            </ce:CameraSuccessOutline>
            <ce:CameraSuccessOutline Grid.Column="1"
                                     Grid.Row="0">
                <ce:CameraSuccessOutline.Behaviors>
                    <ce:FadeInAndOutBehavior Trigger="{Binding RightCaptureSuccess}"
                                             InTimeMs="0"
                                             OutTimeMs="250"
                                             VisibleTimeMs="0"/>
                </ce:CameraSuccessOutline.Behaviors>
            </ce:CameraSuccessOutline>
        </Grid>

        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _retakeLeftBounds}"
                     Padding="{StaticResource _bottomPadding}"
                     IsVisible="{Binding ShouldLeftRetakeBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding RetakeLeftCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="cancel"
                   InputTransparent="True"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _retakeRightBounds}"
                     Padding="{StaticResource _bottomPadding}"
                     IsVisible="{Binding ShouldRightRetakeBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding RetakeRightCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="cancel"
                   InputTransparent="True"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _retakeLeftBounds}"
                     Padding="{StaticResource _bottomPadding}"
                     IsVisible="{Binding ShouldLeftLoadBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding LoadPhotoCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="loadImage"
                   InputTransparent="True"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _retakeRightBounds}"
                     Padding="{StaticResource _bottomPadding}"
                     IsVisible="{Binding ShouldRightLoadBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding LoadPhotoCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="loadImage"
                   InputTransparent="True"/>
        </ContentView>

        <Image x:Name="_rollIndicator"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               IsVisible="{Binding ShouldRollGuideBeVisible}">
            <AbsoluteLayout.LayoutBounds>
                <Rectangle X="0" Y="0" Width="{StaticResource _axisGuidesWidth}" Height="{StaticResource _axisGuidesWidth}"/>
            </AbsoluteLayout.LayoutBounds>
        </Image>
        <Image x:Name="_pitchIndicator"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               IsVisible="{Binding ShouldPitchGuideBeVisible}">
            <AbsoluteLayout.LayoutBounds>
                <Rectangle X="0" Y="0" Width="{StaticResource _biggerAxisGuidesWidth}" Height="{StaticResource _biggerAxisGuidesWidth}"/>
            </AbsoluteLayout.LayoutBounds>
        </Image>
        <Image x:Name="_yawIndicator"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               IsVisible="{Binding ShouldYawGuideBeVisible}">
            <AbsoluteLayout.LayoutBounds>
                <Rectangle X="0" Y="0" Width="{StaticResource _biggerAxisGuidesWidth}" Height="{StaticResource _biggerAxisGuidesWidth}"/>
            </AbsoluteLayout.LayoutBounds>
        </Image>

        <BoxView x:Name="_upperLine" 
                 AbsoluteLayout.LayoutFlags="All"
                 AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                 Margin="{StaticResource _linePadding}"
                 InputTransparent="True"
                 BackgroundColor="White"
                 IsVisible="{Binding ShouldLineGuidesBeVisible}"/>
        <ContentView x:Name="_upperLinePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                     Padding="{StaticResource _linePadding}"
                     IsVisible="{Binding ShouldLineGuidesBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="UpperLinePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <BoxView x:Name="_lowerLine"
                 AbsoluteLayout.LayoutFlags="All"
                 AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                 InputTransparent="True"
                 BackgroundColor="White"
                 Margin="{StaticResource _linePadding}"
                 IsVisible="{Binding ShouldLineGuidesBeVisible}"/>
        <ContentView x:Name="_lowerLinePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                     Padding="{StaticResource _linePadding}"
                     IsVisible="{Binding ShouldLineGuidesBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="LowerLinePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <Image x:Name="_leftReticle"
               AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
               Margin="{StaticResource _reticlePadding}"
               InputTransparent="True" 
               Source="{Binding LeftReticleImage}"
               IsVisible="{Binding ShouldDonutGuideBeVisible}"/>
        <ContentView x:Name="_leftReticlePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                     Padding="{StaticResource _reticlePadding}"
                     IsVisible="{Binding ShouldDonutGuideBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="ReticlePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <Image x:Name="_rightReticle"
               AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
               Margin="{StaticResource _reticlePadding}"
               InputTransparent="True" 
               Source="{Binding RightReticleImage}"
               IsVisible="{Binding ShouldDonutGuideBeVisible}"/>
        <ContentView x:Name="_rightReticlePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                     Padding="{StaticResource _reticlePadding}"
                     IsVisible="{Binding ShouldDonutGuideBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="ReticlePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _clearBounds}"
                     Padding="{StaticResource _topBarButtonPadding}"
                     IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Capture}}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding SwapSidesCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="swap"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _captureBounds}"
                     Padding="{StaticResource _bottomPadding}"
                     IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Capture}}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding CapturePictureCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="aperture"/>
        </ContentView>
        <Grid AbsoluteLayout.LayoutFlags="PositionProportional,WidthProportional"
              RowSpacing="0"
              ColumnSpacing="0"
              IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Final}}">
            <AbsoluteLayout.LayoutBounds>
                <Rectangle X="0" Y="1" Width="1" Height="15"/>
            </AbsoluteLayout.LayoutBounds>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackLayout Grid.Column="1"
                         Orientation="Horizontal"
                         Spacing="0">
                <Image Source="crossed"
                       IsVisible="{Binding Settings.SaveForCrossView}"/>
                <Image Source="parallel"
                       IsVisible="{Binding Settings.SaveForParallel}"/>
                <Image Source="saveBoth"
                       IsVisible="{Binding Settings.SaveSidesSeparately}"/>
                <Image Source="saveOne"
                       IsVisible="{Binding Settings.SaveRedundantFirstSide}"/>
            </StackLayout>
        </Grid>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _clearBounds}"
                     Padding="{StaticResource _topBarButtonPadding}"
                     IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Final}}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ClearCapturesCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="clearBox"/>
        </ContentView>
        <Image Source="eye"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _viewBounds}"
               IsVisible="{Binding ShouldViewButtonBeVisible}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ToggleViewModeCommand}"/>
            </Image.GestureRecognizers>
        </Image>
        <Image Source="edit"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _editBounds}"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Final}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding GoToModeCommand}"
                                      CommandParameter="{x:Static vm:WorkflowStage.Edits}"/>
            </Image.GestureRecognizers>
        </Image>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _captureBounds}"
                     Padding="{StaticResource _bottomPadding}"
                     IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Final}}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding SaveCapturesCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="checkBox"/>
        </ContentView>

        <Grid AbsoluteLayout.LayoutFlags="PositionProportional,WidthProportional"
              AbsoluteLayout.LayoutBounds="{StaticResource _alignBounds}"
              Padding="{StaticResource _topBarButtonPadding}"
              IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Edits}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding GoToModeCommand}"
                                      CommandParameter="{x:Static vm:WorkflowStage.Align}"/>
            </Grid.GestureRecognizers>
            <StackLayout Grid.Column="1"
                         Spacing="0"
                         Orientation="Horizontal">
                <Image Source="rotate"/>
                <Label Text="/"
                       FontAttributes="Bold"
                       FontSize="Large"
                       VerticalTextAlignment="Center"/>
                <Image Source="vertAlign"/>
            </StackLayout>
        </Grid>
        <Grid AbsoluteLayout.LayoutFlags="PositionProportional,WidthProportional"
              AbsoluteLayout.LayoutBounds="{StaticResource _keystoneBounds}"
              IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Edits}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding GoToModeCommand}"
                                      CommandParameter="{x:Static vm:WorkflowStage.Keystone}"/>
            </Grid.GestureRecognizers>
            <StackLayout Grid.Column="1"
                         Spacing="0"
                         Orientation="Horizontal">
                <Image Source="keystoneLeft"/>
                <Image Source="keystoneRight"/>
            </StackLayout>
        </Grid>
        <Image Source="scissor"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _cropBounds}"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Edits}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding GoToModeCommand}"
                                      CommandParameter="{x:Static vm:WorkflowStage.Crop}"/>
            </Image.GestureRecognizers>
        </Image>

        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _undoBounds}"
                     Padding="{StaticResource _topBarButtonPadding}"
                     IsVisible="{Binding ShouldClearEditButtonBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ClearEditCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="undo"
                   InputTransparent="True"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _checkBounds}"
                     Padding="{StaticResource _bottomPadding}"
                     IsVisible="{Binding ShouldSaveEditsButtonBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding SaveEditCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="check"/>
        </ContentView>

        <Image Source="rotateLeft"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _leftRotateLeft}"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Align}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding DecreaseLeftRotation}"/>
            </Image.GestureRecognizers>
        </Image>
        <Image Source="rotateRight"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _leftRotateRight}"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Align}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding IncreaseLeftRotation}"/>
            </Image.GestureRecognizers>
        </Image>
        <Image Source="rotateLeft"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _rightRotateLeft}"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Align}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding DecreaseRightRotation}"/>
            </Image.GestureRecognizers>
        </Image>
        <Image Source="rotateRight"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _rightRotateRight}"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Align}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding IncreaseRightRotation}"/>
            </Image.GestureRecognizers>
        </Image>

        <Image Source="vertAlign"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _leftAlignUp}"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Align}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding LeftUpRightDown}"/>
            </Image.GestureRecognizers>
        </Image>
        <Image Source="vertAlignReverse"
               AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _rightAlignUp}"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Align}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding LeftDownRightUp}"/>
            </Image.GestureRecognizers>
        </Image>

        <StackLayout AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _leftZoom}"
                     Spacing="0"
                     IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Align}}">
            <Image Source="zoomIn">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding LeftZoomIn}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Source="zoomOut">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding LeftZoomOut}"/>
                </Image.GestureRecognizers>
            </Image>
        </StackLayout>
        <StackLayout AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _rightZoom}"
                     Spacing="0"
                     IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Align}}">
            <Image Source="zoomIn">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding RightZoomIn}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Source="zoomOut">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding RightZoomOut}"/>
                </Image.GestureRecognizers>
            </Image>
        </StackLayout>

        <Image AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _leftKeystoneLeft}"
               Source="keystoneLeft"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Keystone}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding DecreaseLeftKeystone}"/>
            </Image.GestureRecognizers>
        </Image>
        <Image AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _leftKeystoneRight}"
               Source="keystoneRight"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Keystone}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding IncreaseLeftKeystone}"/>
            </Image.GestureRecognizers>
        </Image>
        <Image AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _rightKeystoneLeft}"
               Source="keystoneLeft"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Keystone}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding DecreaseRightKeystone}"/>
            </Image.GestureRecognizers>
        </Image>
        <Image AbsoluteLayout.LayoutFlags="PositionProportional"
               AbsoluteLayout.LayoutBounds="{StaticResource _rightKeystoneRight}"
               Source="keystoneRight"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Keystone}}">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding IncreaseRightKeystone}"/>
            </Image.GestureRecognizers>
        </Image>

        <Grid AbsoluteLayout.LayoutFlags="PositionProportional,HeightProportional"
              RowSpacing="0"
              ColumnSpacing="0"
              IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Crop}}">
            <AbsoluteLayout.LayoutBounds>
                <Rectangle X="0.15" Y="0" Width="{StaticResource _mediumIconWidthPlusCropLineThickness}" Height="1"/>
            </AbsoluteLayout.LayoutBounds>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource _cropLineGridLength}"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <BoxView Grid.RowSpan="2"
                     Grid.Row="1"
                     Grid.Column="0"
                     Color="White"
                     WidthRequest="{StaticResource _cropLineThickness}"/>
            <Image Grid.Row="1" 
                   Grid.Column="1"
                   Source="leftTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding DecreaseLeftCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Grid.Row="2" 
                   Grid.Column="1"
                   Source="rightTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding IncreaseLeftCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Grid.Row="3"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Source="leftCrop"/>
        </Grid>
        <Grid AbsoluteLayout.LayoutFlags="PositionProportional,HeightProportional"
              IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Crop}}"
              RowSpacing="0"
              ColumnSpacing="0">
            <AbsoluteLayout.LayoutBounds>
                <Rectangle X="0.3" Y="0" Width="{StaticResource _mediumIconWidthPlusCropLineThickness}" Height="1"/>
            </AbsoluteLayout.LayoutBounds>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="{StaticResource _cropLineGridLength}"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <BoxView Grid.RowSpan="2"
                     Grid.Row="1"
                     Grid.Column="1"
                     Color="White"
                     WidthRequest="{StaticResource _cropLineThickness}"/>
            <Image Grid.Row="1" 
                   Grid.Column="0"
                   Source="rightTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding DecreaseRightCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Grid.Row="2" 
                   Grid.Column="0"
                   Source="leftTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding IncreaseRightCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Grid.Row="3"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Source="rightCrop"/>
        </Grid>

        <Grid AbsoluteLayout.LayoutFlags="PositionProportional,HeightProportional"
              RowSpacing="0"
              ColumnSpacing="0"
              IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Crop}}">
            <AbsoluteLayout.LayoutBounds>
                <Rectangle X="0.7" Y="0" Width="{StaticResource _mediumIconWidthPlusCropLineThickness}" Height="1"/>
            </AbsoluteLayout.LayoutBounds>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource _cropLineGridLength}"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <BoxView Grid.RowSpan="2"
                     Grid.Row="1"
                     Grid.Column="0"
                     Color="White"
                     WidthRequest="{StaticResource _cropLineThickness}"/>
            <Image Grid.Row="1" 
                   Grid.Column="1"
                   Source="leftTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding DecreaseInsideCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Grid.Row="2" 
                   Grid.Column="1"
                   Source="rightTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding IncreaseInsideCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Grid.Row="3"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Source="insideCrop"/>
        </Grid>
        <Grid AbsoluteLayout.LayoutFlags="PositionProportional,HeightProportional"
              IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Crop}}"
              RowSpacing="0"
              ColumnSpacing="0">
            <AbsoluteLayout.LayoutBounds>
                <Rectangle X="0.85" Y="0" Width="{StaticResource _mediumIconWidthPlusCropLineThickness}" Height="1"/>
            </AbsoluteLayout.LayoutBounds>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="{StaticResource _cropLineGridLength}"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <BoxView Grid.RowSpan="2"
                     Grid.Row="1"
                     Grid.Column="1"
                     Color="White"
                     WidthRequest="{StaticResource _cropLineThickness}"/>
            <Image Grid.Row="1" 
                   Grid.Column="0"
                   Source="rightTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding DecreaseOutsideCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Grid.Row="2" 
                   Grid.Column="0"
                   Source="leftTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding IncreaseOutsideCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Grid.Row="3"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Source="outsideCrop"/>
        </Grid>

        <Grid AbsoluteLayout.LayoutFlags="PositionProportional"
              RowSpacing="0"
              ColumnSpacing="0"
              IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Crop}}">
            <AbsoluteLayout.LayoutBounds>
                <Rectangle X="0.8" Y="0.25" Width="{StaticResource _doubleMediumIconWidth}" Height="{StaticResource _mediumIconWidthPlusCropLineThickness}"/>
            </AbsoluteLayout.LayoutBounds>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{StaticResource _cropLineGridLength}"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <BoxView Grid.ColumnSpan="2"
                     Grid.Row="0"
                     Grid.Column="0"
                     Color="White"
                     HeightRequest="{StaticResource _cropLineThickness}"/>
            <Image Grid.Row="1" 
                   Grid.Column="0"
                   Source="upTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding DecreaseTopCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Grid.Row="1" 
                   Grid.Column="1"
                   Source="downTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding IncreaseTopCrop}"/>
                </Image.GestureRecognizers>
            </Image>
        </Grid>
        <Grid AbsoluteLayout.LayoutFlags="PositionProportional"
              RowSpacing="0"
              ColumnSpacing="0"
              IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Crop}}">
            <AbsoluteLayout.LayoutBounds>
                <Rectangle X="0.8" Y="0.8" Width="{StaticResource _doubleMediumIconWidth}" Height="{StaticResource _mediumIconWidthPlusCropLineThickness}"/>
            </AbsoluteLayout.LayoutBounds>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="{StaticResource _cropLineGridLength}"/>
            </Grid.RowDefinitions>
            <BoxView Grid.ColumnSpan="2"
                     Grid.Row="1"
                     Grid.Column="0"
                     Color="White"
                     HeightRequest="{StaticResource _cropLineThickness}"/>
            <Image Grid.Row="0" 
                   Grid.Column="0"
                   Source="downTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding DecreaseBottomCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Grid.Row="0" 
                   Grid.Column="1"
                   Source="upTriangle">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding IncreaseBottomCrop}"/>
                </Image.GestureRecognizers>
            </Image>
        </Grid>

        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _helpBounds}"
                     Padding="{StaticResource _topBarSmallButtonPadding}"
                     IsVisible="{Binding ShouldSettingsAndHelpBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding NavigateToHelpCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="help"
                   InputTransparent="True"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{StaticResource _gearBounds}"
                     Padding="{StaticResource _topBarSmallButtonPadding}"
                     IsVisible="{Binding ShouldSettingsAndHelpBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding NavigateToSettingsCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="gear"
                   InputTransparent="True"/>
        </ContentView>

        <Label AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0.5,0.15,0.75,0.1"
               HorizontalTextAlignment="Center"
               VerticalTextAlignment="Center"
               InputTransparent="True"
               Text="(flip to landscape for a better view)"
               IsVisible="{Binding ShouldPortraitViewModeWarningBeVisible}"/>

        <Label Style="{StaticResource _savingFeedback}"
               Text="Saved to Photos!">
            <Label.Behaviors>
                <ce:FadeInAndOutBehavior Trigger="{Binding SuccessFadeTrigger}"
                                         InTimeMs="250"
                                         OutTimeMs="250"
                                         VisibleTimeMs="2000"/>
            </Label.Behaviors>
        </Label>
        <Label Style="{StaticResource _savingFeedback}"
               Text="Save failed. :(">
            <Label.Behaviors>
                <ce:FadeInAndOutBehavior Trigger="{Binding FailFadeTrigger}"
                                         InTimeMs="250"
                                         OutTimeMs="250"
                                         VisibleTimeMs="2000"/>
            </Label.Behaviors>
        </Label>
        <ActivityIndicator AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0.5,0.5,1,0.5"
               HorizontalOptions="CenterAndExpand"
               VerticalOptions="CenterAndExpand"
               Color="White"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Saving}}"
               IsRunning="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Saving}}"
               InputTransparent="True"/>
        <Label Text="Saving..."
               Style="{StaticResource _savingFeedback}"
               IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.Saving}}"/>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0,0,1,1"
                     IsVisible="{Binding WorkflowStage, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:WorkflowStage.View}}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ToggleViewModeCommand}"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <StackLayout AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.5,0.5,0.5,0.5">
            <StackLayout.Behaviors>
                <ce:FadeInAndOutBehavior Trigger="{Binding MoveLeftTrigger}"
                                         InTimeMs="0"
                                         OutTimeMs="500"
                                         VisibleTimeMs="1500"/>
            </StackLayout.Behaviors>
            <Image Source="left"
                   Aspect="AspectFit"
                   HorizontalOptions="Center"
                   VerticalOptions="EndAndExpand"/>
            <Label Text="MOVE LEFT"
                   FontSize="Large"
                   FontAttributes="Bold"
                   HorizontalOptions="Center"
                   VerticalOptions="StartAndExpand"/>
        </StackLayout>
        <StackLayout AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.5,0.5,0.5,0.5">
            <StackLayout.Behaviors>
                <ce:FadeInAndOutBehavior Trigger="{Binding MoveRightTrigger}"
                                         InTimeMs="0"
                                         OutTimeMs="500"
                                         VisibleTimeMs="1500"/>
            </StackLayout.Behaviors>
            <Image Source="right"
                   Aspect="AspectFit"
                   HorizontalOptions="Center"
                   VerticalOptions="EndAndExpand"/>
            <Label Text="MOVE RIGHT"
                   FontSize="Large"
                   FontAttributes="Bold"
                   HorizontalOptions="Center"
                   VerticalOptions="StartAndExpand"/>
        </StackLayout>
    </AbsoluteLayout>
</fresh:FreshBaseContentPage>