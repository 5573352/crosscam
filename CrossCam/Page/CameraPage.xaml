<?xml version="1.0" encoding="UTF-8"?>
<fresh:FreshBaseContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:fresh="clr-namespace:FreshMvvm;assembly=FreshMvvm"
             xmlns:vm="clr-namespace:CrossCam.ViewModel;assembly=CrossCam"
             xmlns:ce="clr-namespace:CrossCam.CustomElement;assembly=CrossCam"
             xmlns:vc="clr-namespace:CrossCam.ValueConverter;assembly=CrossCam"
             xmlns:forms="clr-namespace:SkiaSharp.Views.Forms;assembly=SkiaSharp.Views.Forms"
             mc:Ignorable="d"
             
             d:DataContext="{d:DesignInstance Type=vm:CameraViewModel, IsDesignTimeCreatable=False}"
			 x:Class="CrossCam.Page.CameraPage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Rectangle x:Key="_captureRectangle">0.5,1,125,125</Rectangle>
            <Rectangle x:Key="_clearRectangle">0.5,0,100,100</Rectangle>
            <Rectangle x:Key="_viewRectangle">0.5,0.3,75,75</Rectangle>
            <Rectangle x:Key="_cropRectangle">0.5,0.6,75,75</Rectangle>
            <Thickness x:Key="_reticlePadding">10</Thickness>
            <Thickness x:Key="_linePadding">0,10,0,10</Thickness>
            <Style TargetType="Label"
                   x:Key="_savingFeedback">
                <Setter Property="FontAttributes"
                        Value="Bold"/>
                <Setter Property="FontSize"
                        Value="24"/>
                <Setter Property="HorizontalOptions"
                        Value="CenterAndExpand"/>
                <Setter Property="VerticalOptions"
                        Value="CenterAndExpand"/>
                <Setter Property="AbsoluteLayout.LayoutFlags"
                        Value="All"/>
                <Setter Property="AbsoluteLayout.LayoutBounds"
                        Value="1,1,1,0.5"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <AbsoluteLayout>
        <Grid AbsoluteLayout.LayoutFlags="All"
              AbsoluteLayout.LayoutBounds="0,0,1,1"
              ColumnSpacing="0"
              RowSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackLayout Grid.Column="{Binding HelpTextColumn}"
                         Grid.Row="0"
                         IsVisible="{Binding IsSaving, Converter={vc:BooleanInvertConverter}}"
                         Padding="10"
                         Spacing="0"
                         VerticalOptions="CenterAndExpand">
                <Label Text="{Binding HelpText}"
                       IsVisible="{Binding ShouldHelpTextBeVisible}"/>
            </StackLayout>
            <forms:SKCanvasView x:Name="_canvasView"
                           Grid.Column="0"
                           Grid.Row="0"
                           Grid.ColumnSpan="2"
                           PaintSurface="OnPaintSurface"/>
            <ce:CameraModule Grid.Column="{Binding CameraColumn}"
                             Grid.Row="0"
                             SwitchToContinuousFocusTrigger="{Binding SwitchToContinuousFocusTrigger}"
                             IsTapToFocusEnabled="{Binding Settings.IsTapToFocusEnabled}"
                             IsPortrait="{Binding IsViewPortrait}"
                             CaptureTrigger="{Binding CapturePictureTrigger}"
                             IsVisible="{Binding IsCameraVisible}"
                             CapturedImage="{Binding CapturedImageBytes}"
                             CaptureSuccess="{Binding CaptureSuccess}"
                             ErrorMessage="{Binding ErrorMessage}"
                             IsFullScreenPreview="{Binding Settings.FillScreenPreview}"
                             WasCapturePortrait="{Binding WasCapturePortrait}"/>
            <ce:CameraSuccessOutline Grid.Column="0"
                                     Grid.Row="0">
                <ce:CameraSuccessOutline.Behaviors>
                    <ce:FadeInAndOutBehavior Trigger="{Binding LeftCaptureSuccess}"
                                             InTimeMs="0"
                                             OutTimeMs="250"
                                             VisibleTimeMs="0"/>
                </ce:CameraSuccessOutline.Behaviors>
            </ce:CameraSuccessOutline>
            <ce:CameraSuccessOutline Grid.Column="1"
                                     Grid.Row="0">
                <ce:CameraSuccessOutline.Behaviors>
                    <ce:FadeInAndOutBehavior Trigger="{Binding RightCaptureSuccess}"
                                             InTimeMs="0"
                                             OutTimeMs="250"
                                             VisibleTimeMs="0"/>
                </ce:CameraSuccessOutline.Behaviors>
            </ce:CameraSuccessOutline>
        </Grid>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="1,0,0.15,0.20"
                     Padding="10"
                     IsVisible="{Binding ShouldSettingsAndInfoBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding NavigateToHelpCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="help"
                   InputTransparent="True"
                   Opacity="0.5"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="1,1,0.15,0.20"
                     Padding="10"
                     IsVisible="{Binding ShouldSettingsAndInfoBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding NavigateToSettingsCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="gear"
                   InputTransparent="True"
                   Opacity="0.5"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.15, 1, 0.125, 0.125"
                     Padding="10"
                     IsVisible="{Binding ShouldLeftRetakeBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding RetakeLeftCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="cancel"
                   InputTransparent="True"
                   Opacity="0.5"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.85, 1, 0.125, 0.125"
                     Padding="10"
                     IsVisible="{Binding ShouldRightRetakeBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding RetakeRightCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="cancel"
                   InputTransparent="True"
                   Opacity="0.5"/>
        </ContentView>
        <BoxView x:Name="_upperLine" 
                 AbsoluteLayout.LayoutFlags="All"
                 AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                 Margin="{DynamicResource _linePadding}"
                 InputTransparent="True"
                 BackgroundColor="White"
                 IsVisible="{Binding ShouldLineGuidesBeVisible}"/>
        <ContentView x:Name="_upperLinePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                     Padding="{DynamicResource _linePadding}"
                     IsVisible="{Binding ShouldLineGuidesBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="UpperLinePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <BoxView x:Name="_lowerLine"
                 AbsoluteLayout.LayoutFlags="All"
                 AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                 InputTransparent="True"
                 BackgroundColor="White"
                 Margin="{DynamicResource _linePadding}"
                 IsVisible="{Binding ShouldLineGuidesBeVisible}"/>
        <ContentView x:Name="_lowerLinePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                     Padding="{DynamicResource _linePadding}"
                     IsVisible="{Binding ShouldLineGuidesBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="LowerLinePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <Image x:Name="_leftReticle"
               AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
               Margin="{DynamicResource _reticlePadding}"
               InputTransparent="True" 
               Source="{Binding LeftReticleImage}"
               IsVisible="{Binding ShouldDonutGuideBeVisible}"/>
        <ContentView x:Name="_leftReticlePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                     Padding="{DynamicResource _reticlePadding}"
                     IsVisible="{Binding ShouldDonutGuideBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="ReticlePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <Image x:Name="_rightReticle"
               AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
               Margin="{DynamicResource _reticlePadding}"
               InputTransparent="True" 
               Source="{Binding RightReticleImage}"
               IsVisible="{Binding ShouldDonutGuideBeVisible}"/>
        <ContentView x:Name="_rightReticlePanner"
                     AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0, 0, 0, 0"
                     Padding="{DynamicResource _reticlePadding}"
                     IsVisible="{Binding ShouldDonutGuideBeVisible}">
            <ContentView.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="ReticlePanned"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{DynamicResource _captureRectangle}"
                     Padding="20"
                     IsVisible="{Binding ShouldEndButtonsBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding SaveCapturesCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="checkmark"
                   Opacity="0.75"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{DynamicResource _captureRectangle}"
                     Padding="20"
                     IsVisible="{Binding ShouldCaptureButtonBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding CapturePictureCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="aperture"
                   Opacity="0.75"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{DynamicResource _captureRectangle}"
                     Padding="20"
                     IsVisible="{Binding ShouldCropButtonsBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding HideCropButtonsCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="check"
                   Opacity="0.75"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{DynamicResource _viewRectangle}"
                     Padding="10"
                     IsVisible="{Binding ShouldEndButtonsBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ToggleViewModeCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="eye"
                   Opacity="0.75"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{DynamicResource _cropRectangle}"
                     Padding="10"
                     IsVisible="{Binding ShouldEndButtonsBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ShowCropButtonsCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="scissor"
                   Opacity="0.75"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{DynamicResource _clearRectangle}"
                     Padding="20"                     
                     IsVisible="{Binding ShouldCaptureButtonBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding SwapSidesCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="swap"
                   Opacity="0.5"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{DynamicResource _clearRectangle}"
                     Padding="20"
                     IsVisible="{Binding ShouldEndButtonsBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ClearCapturesCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="clear"
                   InputTransparent="True"
                   Opacity="0.75"/>
        </ContentView>
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="{DynamicResource _clearRectangle}"
                     Padding="20"
                     IsVisible="{Binding ShouldCropButtonsBeVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ClearCropsCommand}"/>
            </ContentView.GestureRecognizers>
            <Image Source="x"
                   InputTransparent="True"
                   Opacity="0.75"/>
        </ContentView>

        <StackLayout AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="0.2, 0, 50, 150"
                     IsVisible="{Binding ShouldCropButtonsBeVisible}"
                     Spacing="0">
            <Image Source="chevronRight"
                   Opacity="0.75">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding IncreaseLLCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Source="leftScissor"
                   Opacity="0.75"/>
            <Image Source="chevronLeft"
                   Opacity="0.75">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding DecreaseLLCrop}"/>
                </Image.GestureRecognizers>
            </Image>
        </StackLayout>
        <StackLayout AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="0.2, 1, 50, 150"
                     IsVisible="{Binding ShouldCropButtonsBeVisible}"
                     Spacing="0">
            <Image Source="chevronRight"
                   Opacity="0.75">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding DecreaseLRCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Source="rightScissor"
                   Opacity="0.75"/>
            <Image Source="chevronLeft"
                   Opacity="0.75">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding IncreaseLRCrop}"/>
                </Image.GestureRecognizers>
            </Image>
        </StackLayout>
        <StackLayout AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="0.8, 0, 50, 150"
                     IsVisible="{Binding ShouldCropButtonsBeVisible}"
                     Spacing="0">
            <Image Source="chevronLeft"
                   Opacity="0.75">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding IncreaseRRCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Source="rightScissor"
                   Opacity="0.75"/>
            <Image Source="chevronRight"
                   Opacity="0.75">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding DecreaseRRCrop}"/>
                </Image.GestureRecognizers>
            </Image>
        </StackLayout>
        <StackLayout AbsoluteLayout.LayoutFlags="PositionProportional"
                     AbsoluteLayout.LayoutBounds="0.8, 1, 50, 150"
                     Spacing="0"
                     IsVisible="{Binding ShouldCropButtonsBeVisible}">
            <Image Source="chevronLeft"
                   Opacity="0.75">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding DecreaseRLCrop}"/>
                </Image.GestureRecognizers>
            </Image>
            <Image Source="leftScissor"
                   Opacity="0.75"/>
            <Image Source="chevronRight"
                   Opacity="0.75">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding IncreaseRLCrop}"/>
                </Image.GestureRecognizers>
            </Image>
        </StackLayout>

        <Label Style="{DynamicResource _savingFeedback}"
               Text="Saved to Photos!">
            <Label.Behaviors>
                <ce:FadeInAndOutBehavior Trigger="{Binding SuccessFadeTrigger}"
                                         InTimeMs="250"
                                         OutTimeMs="250"
                                         VisibleTimeMs="2000"/>
            </Label.Behaviors>
        </Label>
        <Label Style="{DynamicResource _savingFeedback}"
               Text="Save failed. :(">
            <Label.Behaviors>
                <ce:FadeInAndOutBehavior Trigger="{Binding FailFadeTrigger}"
                                         InTimeMs="250"
                                         OutTimeMs="250"
                                         VisibleTimeMs="2000"/>
            </Label.Behaviors>
        </Label>
        <ActivityIndicator AbsoluteLayout.LayoutFlags="All"
               AbsoluteLayout.LayoutBounds="0.5,0.5,1,0.5"
               HorizontalOptions="CenterAndExpand"
               VerticalOptions="CenterAndExpand"
               Color="White"
               IsVisible="{Binding IsSaving}"
               IsRunning="{Binding IsSaving}"
               InputTransparent="True"/>
        <Label Text="Saving..."
               Style="{DynamicResource _savingFeedback}"
               IsVisible="{Binding IsSaving}"/>
        <ContentView AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0,0,1,1"
                     IsVisible="{Binding IsViewMode}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ToggleViewModeCommand}"/>
            </ContentView.GestureRecognizers>
        </ContentView>
        <StackLayout AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.5,0.5,0.5,0.5">
            <StackLayout.Behaviors>
                <ce:FadeInAndOutBehavior Trigger="{Binding MoveLeftTrigger}"
                                         InTimeMs="0"
                                         OutTimeMs="500"
                                         VisibleTimeMs="1500"/>
            </StackLayout.Behaviors>
            <Image Source="left"
                   Aspect="AspectFit"
                   HorizontalOptions="Center"
                   VerticalOptions="EndAndExpand"/>
            <Label Text="MOVE LEFT"
                   FontSize="Large"
                   FontAttributes="Bold"
                   HorizontalOptions="Center"
                   VerticalOptions="StartAndExpand"/>
        </StackLayout>
        <StackLayout AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="0.5,0.5,0.5,0.5">
            <StackLayout.Behaviors>
                <ce:FadeInAndOutBehavior Trigger="{Binding MoveRightTrigger}"
                                         InTimeMs="0"
                                         OutTimeMs="500"
                                         VisibleTimeMs="1500"/>
            </StackLayout.Behaviors>
            <Image Source="right"
                   Aspect="AspectFit"
                   HorizontalOptions="Center"
                   VerticalOptions="EndAndExpand"/>
            <Label Text="MOVE RIGHT"
                   FontSize="Large"
                   FontAttributes="Bold"
                   HorizontalOptions="Center"
                   VerticalOptions="StartAndExpand"/>
        </StackLayout>
    </AbsoluteLayout>
</fresh:FreshBaseContentPage>